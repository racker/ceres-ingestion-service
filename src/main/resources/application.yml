server:
  port: 8080

---
spring:
  profiles: development

rest-template:
  request-config:
    connection-request-timeout: 120000  # timeout when requesting a connection from the connection manager
    connect-timeout: 120000             # timeout until a connection is established
    socket-timeout: 120000              # timeout for waiting for data

  pooling-http-client-connection-manager:
    max-total: 5 # Max number of connection to pool

kafka:
  servers: ${KAFKA_SERVERS_TEST}
  listener-container-idle-interval: ${LISTENER_CONTAINER_IDLE_INTERVAL}
  session-timeout-ms-config: ${SESSION_TIMEOUT_MS_CONFIG}

  ssl:
    truststore-location: ${TRUSTSTORE_LOCATION}
    truststore-password: ${TRUSTSTORE_PASSWORD}
    keystore-location: ${KEYSTORE_LOCATION}
    keystore-password: ${KEYSTORE_PASSWORD}
    key-password: ${KEY_PASSWORD}
  properties:
    security-protocol: SSL

  topics:
    in: unified.metrics.json
    partition: 0
    offset: 0

  consumer:
      group: influxdb-consumer-group

tenant-routing-service:
  url: ${TENANT_ROUTING_SERVICE_URL}

logging:
  level:
    com.rackspacecloud: debug
    org.springframework:
      web: info
      kafka.listener: DEBUG

---
spring:
  profiles: production

rest-template:
  request-config:
    # timeout when requesting a connection from the connection manager
    connection-request-timeout: ${REST_TEMPLATE_CONNECTION_REQUEST_TIMEOUT}

    # timeout until a connection is established
    connect-timeout: ${REST_TEMPLATE_CONNECT_TIMEOUT}

    # timeout for waiting for data
    socket-timeout: ${REST_TEMPLATE_SOCKET_TIMEOUT}

  pooling-http-client-connection-manager:
    max-total: ${REST_TEMPLATE_CONNECTION_POOLING_MAX} # Max number of connection to pool

kafka:
  servers: ${KAFKA_SERVERS}
  listener-container-idle-interval: ${LISTENER_CONTAINER_IDLE_INTERVAL}
  session-timeout-ms-config: ${SESSION_TIMEOUT_MS_CONFIG}

  ssl:
    truststore-location: ${TRUSTSTORE_LOCATION}
    truststore-password: ${TRUSTSTORE_PASSWORD}
    keystore-location: ${KEYSTORE_LOCATION}
    keystore-password: ${KEYSTORE_PASSWORD}
    key-password: ${KEY_PASSWORD}
  properties:
    security-protocol: SSL

  topics:
    in: unified.metrics.json
    partition: 0
    offset: 0

  consumer:
    group: influxdb-consumer-group

tenant-routing-service:
  url: ${TENANT_ROUTING_SERVICE_URL}

logging:
  level:
    com.rackspacecloud: info
    org.springframework:
      web: info
      kafka.listener: info